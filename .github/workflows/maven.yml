name: Java Maven Build & Publish Artifact

on:
  push:
    branches: [ "main" ] # development, release, production
  pull_request:
    branches: [ "main" ] # development, release, production

jobs:
  dependency:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4 # more documentation
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: mvn dependency:analyze-report
    - run: ls -la ./target

  compile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4 # more documentation
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        server-id: github
        settings-path: ${{ github.workspace }}
    - name: Compile the Project
      run: mvn -B compile

  build:
    runs-on: ubuntu-latest
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4 # more documentation
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        server-id: github
        settings-path: ${{ github.workspace }}
    - name: Build with Maven
      run: mvn -B package --file pom.xml
 
  publish-job:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4 # more documentation
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: mvn --batch-mode --update-snapshots verify
    - run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v3
      with:
        name: jar-artifact
        path: staging/
        retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: publish-job
    steps:
    - uses: docker/login-action@v1
      with:
        registry: registry.nuamexchange.com
        username: ${{ secrets.HARBOR_USERNAME  }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v1
      with:
        name: jar-artifact
        path: staging/
    - name: Build and push an image
      run: |
        AUTH=$(echo -n ${{ secrets.HARBOR_USERNAME  }}:${{ secrets.HARBOR_PASSWORD }} | base64)
        cat << EOF > config.json
        {
          "auths":{
            "registry.nuamexchange.com/test-devops/jar-artifact":{
              "username":"${{ secrets.HARBOR_USERNAME  }}","password":"${{ secrets.HARBOR_PASSWORD }}","auth":"${AUTH}"
            }
          }
        }
        EOF
        pwd
        ls -la ./staging
        docker run \
          -v $(pwd):/workspace \
          -v $(pwd)/config.json:/kaniko/.docker/config.json:ro \
          gcr.io/kaniko-project/executor:latest \
            --context . \
            --dockerfile=Dockerfile \
            --destination registry.nuamexchange.com/test-devops/jar-artifact:${{ github.run_number }} \