name: Java Maven Build & Publish Artifact

on:
  push:
    branches: [ "main" ] # development, release, production
  pull_request:
    branches: [ "main" ] # development, release, production

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v4
    - name: 'Dependency Review'
      uses: actions/dependency-review-action@v4
    - uses: actions/setup-java@v4 # more documentation
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        server-id: github
        settings-path: ${{ github.workspace }}
    - run: mvn dependency:analyze-report
    - run: ls -la ./target

    - name: Compile #Para no volver a configurar el JDK realizar la ejecuci√≥n con la configuracion hecha
      run: mvn -B compile

    - name: Build with maven
      run: mvn -B package --file pom.xml

    - name: Verify
      run: mvn --batch-mode --update-snapshots verify

    - name: Copy jar
      run: mkdir staging && cp target/*.jar staging

    - name: Upload Jar
      uses: actions/upload-artifact@v3
      with:
        name: jar-artifact
        path: staging/


  publish-job:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: jar-artifact
          path: ${{ github.workspace }}/project

      - name: Sign artifact
        run:
          echo "Sign with cosign"

      - name: Making Dockerfile
        run:
          cd ${{ github.workspace }}/project
          echo "Make dockerfile"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#    - name: Build and push an image
#      run: |
#        AUTH=$(echo -n ${{ secrets.HARBOR_USERNAME  }}:${{ secrets.HARBOR_PASSWORD }} | base64)
#        cat << EOF > config.json
#        {
#          "auths":{
#            "registry.nuamexchange.com/test-devops/jar-artifact":{
#              "username":"${{ secrets.HARBOR_USERNAME  }}","password":"${{ secrets.HARBOR_PASSWORD }}","auth":"${AUTH}"
#            }
#          }
#        }
#        EOF
#        pwd
#        ls -la ./staging
#        docker run \
#          -v $(pwd):/workspace \
#          -v $(pwd)/config.json:/kaniko/.docker/config.json:ro \
#          gcr.io/kaniko-project/executor:latest \
#            --context . \
#            --dockerfile=Dockerfile \
#            --destination registry.nuamexchange.com/test-devops/jar-artifact:${{ github.run_number }} \

