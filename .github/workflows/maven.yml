name: Java Maven Build & Publish Artifact

on:
  push:
    branches: [ "main" ] # development, release, production
  pull_request:
    branches: [ "main" ] # development, release, production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repo'
        uses: actions/checkout@v4
      - name: 'Setup Java JDK'
        uses: actions/setup-java@v4 # more documentation
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - run: mvn dependency:analyze-report -DignoreNonCompile=true
      - run: tar -czvf report.tar.gz target/site/
      - run: ls -la .
      - name: Compile the Project
        run: mvn compile
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - run: mvn --batch-mode --update-snapshots verify
      - run: mkdir staging && cp target/gs-maven-0.1.0.jar staging && cp report.tar.gz staging
      - uses: actions/upload-artifact@v3
        with:
          name: jar-artifact
          path: staging/
      - uses: docker/login-action@v1
        with:
          registry: registry.nuamexchange.com
          username: ${{ secrets.HARBOR_USERNAME  }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - uses: actions/download-artifact@v1
        with:
          name: jar-artifact
          path: staging/
#      - name: Build and push
#        run: |
#          AUTH=$(echo -n ${{ secrets.HARBOR_USERNAME  }}:${{ secrets.HARBOR_PASSWORD }} | base64)
#          cat << EOF > config.json
#          {
#            "auths":{
#              "registry.nuamexchange.com/test-devops/jar-artifact":{
#                "username":"${{ secrets.HARBOR_USERNAME  }}","password":"${{ secrets.HARBOR_PASSWORD }}","auth":"${AUTH}"
#              }
#            }
#          }
#          EOF
#          pwd
#          ls -la ./staging
#          docker run \
#            -v $(pwd):/workspace \
#            -v $(pwd)/config.json:/kaniko/.docker/config.json:ro \
#            gcr.io/kaniko-project/executor:latest \
#              --context . \
#              --dockerfile=Dockerfile \
#              --destination registry.nuamexchange.com/test-devops/jar-artifact:${{ github.run_number }} \
